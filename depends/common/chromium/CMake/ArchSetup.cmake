if(NOT CORE_SYSTEM_NAME)
  if(CMAKE_SYSTEM_NAME STREQUAL "Darwin")
    set(CORE_SYSTEM_NAME "osx")
  else()
    string(TOLOWER ${CMAKE_SYSTEM_NAME} CORE_SYSTEM_NAME)
  endif()
endif()

if(NOT CPU)
  set(CPU ${CMAKE_SYSTEM_PROCESSOR})
endif()

if(WITH_ARCH)
  set(ARCH ${WITH_ARCH})
else()
  if(CORE_SYSTEM_NAME STREQUAL android)
    if(CPU STREQUAL armeabi-v7a)
      set(ARCH arm)
      set(NEON True)
      set(NEON_FLAGS "-mfpu=neon")
      if(CMAKE_COMPILER_IS_GNUCC AND CMAKE_COMPILER_IS_GNUCXX)
        set(NEON_FLAGS "${NEON_FLAGS} -mvectorize-with-neon-quad")
      endif()
    elseif(CPU STREQUAL arm64-v8a)
      set(ARCH aarch64)
      set(NEON True)
    elseif(CPU STREQUAL i686)
      set(ARCH x86)
      set(NEON False)
    else()
      message(SEND_ERROR "System '${CORE_SYSTEM_NAME}' Unknown CPU: ${CPU}")
    endif()
  elseif(CORE_SYSTEM_NAME STREQUAL freebsd)
    if(CMAKE_SYSTEM_PROCESSOR STREQUAL amd64)
      set(ARCH x86_64)
    elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "i.86")
      set(ARCH x86)
    elseif(CMAKE_SYSTEM_PROCESSOR STREQUAL armv6 OR CMAKE_SYSTEM_PROCESSOR STREQUAL armv7)
      set(ARCH arm)
      set(NEON True)
    elseif(CMAKE_SYSTEM_PROCESSOR STREQUAL aarch64)
      set(ARCH aarch64)
      set(NEON True)
    else()
      message(SEND_ERROR "System '${CORE_SYSTEM_NAME}' Unknown CPU: ${CPU}")
    endif()
  elseif(CORE_SYSTEM_NAME STREQUAL ios)
    if(CPU STREQUAL armv7)
      set(ARCH arm)
      set(NEON True)
    elseif(CPU STREQUAL arm64)
      set(ARCH aarch64)
      set(NEON True)
    else()
      message(SEND_ERROR "Unknown CPU: ${CPU}")
    endif()
  elseif(CORE_SYSTEM_NAME STREQUAL osx)
    if(CPU STREQUAL i386)
      set(ARCH x86)
      set(NEON False)
    elseif(CPU STREQUAL x86_64)
      set(ARCH x86_64)
      set(NEON False)
    else()
      message(SEND_ERROR "System '${CORE_SYSTEM_NAME}' Unknown CPU: ${CPU}")
    endif()
  elseif(CORE_SYSTEM_NAME STREQUAL windows)
    if(CMAKE_SIZEOF_VOID_P EQUAL 4)
      set(ARCH x86)
      set(SDK_TARGET_ARCH x86)
    elseif(CMAKE_SIZEOF_VOID_P EQUAL 8)
      set(ARCH x86_64)
      set(SDK_TARGET_ARCH x64)
    else()
      message(SEND_ERROR "System '${CORE_SYSTEM_NAME}' Unknown CPU: ${CPU}")
    endif()
  elseif(CORE_SYSTEM_NAME STREQUAL linux)
    if(WITH_ARCH)
      set(ARCH ${WITH_ARCH})
    else()
      if(CPU STREQUAL x86_64)
        set(ARCH x86_64)
        set(NEON False)
      elseif(CPU MATCHES "i.86")
        set(ARCH x86)
        set(NEON False)
        add_options(CXX ALL_BUILDS "-msse")
      elseif(CPU STREQUAL arm1176jzf-s)
        set(ARCH arm)
        set(NEON False)
        set(NEON_FLAGS "-mcpu=arm1176jzf-s -mtune=arm1176jzf-s -mfloat-abi=hard -mfpu=vfp")
      elseif(CPU MATCHES "cortex-a7")
        set(ARCH arm)
        set(NEON True)
        set(NEON_FLAGS "-fPIC -mcpu=cortex-a7")
      elseif(CPU MATCHES "cortex-a53")
        set(ARCH arm)
        set(NEON True)
        set(NEON_FLAGS "-fPIC -mcpu=cortex-a53")
      elseif(CPU MATCHES arm)
        set(ARCH arm)
        set(NEON True)
      elseif(CPU MATCHES aarch64 OR CPU MATCHES arm64)
        set(ARCH aarch64)
        set(NEON True)
      else()
        message(SEND_ERROR "System '${CORE_SYSTEM_NAME}' Unknown CPU: ${CPU}")
      endif()
    endif()
  endif()
endif()
